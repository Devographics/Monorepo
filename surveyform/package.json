{
  "name": "vulcan-next",
  "version": "0.6.2",
  "private": true,
  "scripts": {
    "build-storybook": "build-storybook",
    "build:docker": "docker build -f ./.vn/docker/vn.production.dockerfile -t vulcan-next .",
    "//old-build:scripts": "./.vn/scripts/build-scripts.sh",
    "//build:scripts": "tsup-node --treeshake",
    "build:scripts": "tsup --treeshake",
    "build:static": "# Next Export is not compatible with i18n, this feature is now deactivated in Vulcan Next. See https://github.com/VulcanJS/vulcan-next/issues/98 #next build && next export",
    "build:storybook": "rm -Rf storybook-static && build-storybook -s ./public # TODO: we shouldn't need to remove, but Storybook 6.1 has a small bug and can't remove existing build automatically",
    "build:test:docker": "docker build -f ./.vn/docker/cypress.dockerfile -t vulcan-next-test .",
    "build": "next build",
    "chromatic": "dotenv -e .env.development.local chromatic --build-script-name build-storybook",
    "clean": "rm -Rf ./dist ./storybook-static .yalc # clean various build folders",
    "combine:reports": "nyc merge reports && mv coverage.json .nyc_output/out.json # intermediate script",
    "copy:reports": "cp coverage-e2e/coverage-final.json reports/from-cypress.json && cp coverage-unit/coverage-final.json reports/from-jest.json # intermediate scripts",
    "coverage:e2e": "cross-env COVERAGE=1 npm run build && start-server-and-test start:test http://localhost:3000 'COVERAGE=1 cypress run'",
    "coverage:unit": "jest --coverage",
    "coverage": "npm run coverage:unit && npm run coverage:e2e",
    "cypress:open": "cross-env CYPRESS_coverage=false NODE_ENV=test  cypress open",
    "cypress:run": "cross-env CYPRESS_DEBUG=false CYPRESS_coverage=false NODE_ENV=test cypress run --headless",
    "db:test:seed": "dotenv -e .env.test node ./scripts/dist/seed.mjs",
    "//db:test:reset": "### Reset can only happen against the test database!",
    "db:test:reset": "dotenv -e .env.test node ./scripts/dist/reset.mjs",
    "debug": "NODE_OPTIONS='--inspect' next",
    "predev": "cross-env NODE_ENV=development pnpm on:server:start",
    "dev": "pnpm run predev && next",
    "//dev:test": "# Start app in test + dev mode FIXME: Next doesn't respect the .env.test anymore during Cypress tests.",
    "dev:test": "cross-env NODE_ENV=test next",
    "link:vulcan": "./.vn/scripts/link-vulcan.sh # for linking a local copy of Vulcan NPM monorepo (don't forget to publish in Vulcan NPM first)",
    "unlink:vulcan": "yalc remove --all",
    "lint": "pnpm run next lint",
    "mkdir:reports": "rm -Rf reports && mkdir reports || true # intermediate script",
    "//mongo": "# shortcut for start:mongo",
    "mongo": "pnpm run start:mongo",
    "on:server:start": "node ./scripts/dist/onServerStart.mjs",
    "postbuild": "next-sitemap --config vulcan-next-sitemap.js",
    "postcoverage": "npm run report:combined # combine jest and cypress coverage reports",
    "//postinstall": " # @see https://github.com/apollographql/apollo-feature-requests/issues/287",
    "postinstall": "pnpm run build:scripts && node ./.vn/scripts/fix-apollo.js",
    "precombine:reports": "npm run copy:reports && rm -Rf .nyc_output && mkdir .nyc_output || true # intermediate script",
    "precopy:reports": "npm run mkdir:reports # intermediate script",
    "precoverage": "rm -rf .nyc_output || true # delete previous nyx instrumentation",
    "prepare": "husky install || echo 'Husky command not installed or not working, are you running in production? You won't be protected when committing code",
    "detect-leaks": "docker run -v $(pwd):/path zricethezav/gitleaks:latest detect -v --source=\"/path\"",
    "pre-commit:gitleaks": "docker run -v $(pwd):/path zricethezav/gitleaks:latest protect -v  --source=\"/path\" --staged",
    "pre-commit": "echo 'Running pnpm pre-commit command' # Automatically run by husky on commit",
    "pre-commit2": "echo 'Running pnpm pre-commit command' && pnpm run pre-commit:gitleaks # Automatically run by husky on commit",
    "prereport:combined": "npm run combine:reports # intermediate script",
    "report:combined": "nyc report --reporter lcov --report-dir coverage | exit 0 # intermediate script",
    "start:docker": "docker run -p 3000:3000 --env-file .env.development -it vns:latest",
    "//----MONGO----": "",
    "//start:mongo": " # will start or create & start the image + store data locally in .mongo folder + remove the container when stopped",
    "start:mongo": "docker run --rm -p 27017:27017 -v \"$(pwd)/.mongo:/data/db\" --label vulcan-mongodb mongo:4.4",
    "//----REDIS----": "",
    "redis": "docker run --rm -p 6379:6379 --label vulcan-redis redis:7.0.0",
    "//----STORYBOOK----": "",
    "storybook": "start-storybook -p 6006 -s ./public",
    "start:storybook-static": "serve storybook-static",
    "start:static": "# Next Export is not compatible with i18n, this feature is now deactivated in Vulcan Next. See https://github.com/VulcanJS/vulcan-next/issues/98 #serve ./out",
    "start:test": "cross-env NODE_ENV=test npm run start # Start app in test mode",
    "//prestart": "Be careful when deploying serverless, this might run multiple time?",
    "prestart": "pnpm on:server:start",
    "start": "next start",
    "test:docker": "docker run --env-file .env.development -it vns-test:latest",
    "test:e2e": "cross-env NODE_ENV=test npm run build && start-server-and-test start:test http://localhost:3000 'cypress:run'",
    "test:unit": "jest --testPathIgnorePatterns=tests/vn",
    "test:vn": "jest --testPathPattern=tests/vn # run tests for Vulcan Next itself, eg scripts (long) ",
    "test": "npm run test:unit && npm run test:e2e",
    "upgrade:vulcan": "pnpm up '@vulcanjs/*' --latest && pnpm run postinstall",
    "typecheck-watch": "tsc --noEmit --p src/tsconfig.json -w",
    "//typecheck": " # in case of error with @vulcanjs/* package, check that src/types (eg simpl-schema) are up-to-date with vulcan-npm",
    "typecheck": "tsc --noEmit --p src/tsconfig.json",
    "update-link-vulcan": "yalc update"
  },
  "dependencies": {
    "@apollo/client": "^3.5.10",
    "@devographics/core-models": "workspace:*",
    "@devographics/encrypt-email": "workspace:*",
    "@graphql-tools/merge": "^8.2.1",
    "@graphql-tools/schema": "^8.3.1",
    "@hapi/iron": "6.0.0",
    "@mdx-js/loader": "^1.6.6",
    "@mdx-js/react": "^1.6.13",
    "@next/env": "^12.3.0",
    "@next/mdx": "^10.0.2",
    "@sentry/nextjs": "6",
    "@sentry/node": "^7.11.1",
    "@sentry/react": "^7.13.0",
    "@vulcanjs/core": "0.7.2-alpha.3",
    "@vulcanjs/crud": "0.7.2-alpha.3",
    "@vulcanjs/graphql": "0.7.2-alpha.3",
    "@vulcanjs/i18n": "0.7.2-alpha.3",
    "@vulcanjs/mdx": "0.7.2-alpha.3",
    "@vulcanjs/model": "0.7.2-alpha.3",
    "@vulcanjs/mongo": "0.7.2-alpha.3",
    "@vulcanjs/mongo-apollo": "0.7.2-alpha.3",
    "@vulcanjs/permissions": "0.7.2-alpha.3",
    "@vulcanjs/react-hooks": "0.7.2-alpha.3",
    "@vulcanjs/react-i18n": "0.7.2-alpha.4",
    "@vulcanjs/react-ui": "0.7.2-alpha.5",
    "@vulcanjs/react-ui-bootstrap": "0.7.2-alpha.5",
    "@vulcanjs/react-ui-lite": "0.7.2-alpha.5",
    "@vulcanjs/schema": "0.7.2-alpha.3",
    "@vulcanjs/utils": "0.7.2-alpha.3",
    "apollo-server": "3",
    "apollo-server-core": "^3.10.2",
    "apollo-server-express": "3",
    "babel-jest": "26.0.1",
    "babel-plugin-istanbul": "6.0.0",
    "bcrypt": "^5.0.1",
    "bowser": "^2.11.0",
    "clsx": "^1.1.1",
    "cookie": "^0.5.0",
    "cors": "^2.8.5",
    "cross-env": "7.0.2",
    "debug": "4.1.1",
    "deepmerge": "^4.2.2",
    "express": "4.17.1",
    "express-rate-limit": "^6.4.0",
    "graphql": "15.4.0",
    "graphql-fields": "^2.0.3",
    "graphql-tag": "2.10.3",
    "gray-matter": "^4.0.2",
    "i18next": "^19.4.5",
    "i18next-browser-languagedetector": "^4.2.0",
    "i18next-http-backend": "^1.0.15",
    "js-yaml": "^4.1.0",
    "js-yaml-loader": "^1.2.2",
    "lodash": "^4.17.19",
    "moment": "^2.29.4",
    "mongoose": "^6.4.5",
    "nanoid": "^3.1.25",
    "next": "12.3.1",
    "next-connect": "^0.9.1",
    "next-sitemap": "^1.4.17",
    "node-cache": "^5.1.2",
    "node-fetch": "^3.2.10",
    "nodemailer": "^6.6.3",
    "passport": "^0.4.1",
    "passport-local": "1.0.0",
    "passport-magic-login": "^1.0.9",
    "polished": "^3.6.5",
    "postcss-nested": "^4.2.1",
    "qs": "^6.10.5",
    "querystring": "^0.2.1",
    "react": "^17.0.1",
    "react-bootstrap": "^2.5.0",
    "react-bootstrap-typeahead": "^6.0.0-alpha.4",
    "react-confetti": "^6.0.1",
    "react-cookie": "^4.1.1",
    "react-countup": "^6.1.0",
    "react-dom": "^17.0.1",
    "react-hook-form": "4.9.8",
    "react-i18next": "^11.5.0",
    "react-markdown": "^7.1.1",
    "react-spring": "^8.0.27",
    "rehype-raw": "^6.1.0",
    "sanitize-html": "^2.6.1",
    "sass": "^1.43.5",
    "simpl-schema": "^1.12.3",
    "styled-jsx-plugin-postcss": "^3.0.2",
    "swr": "^0.4.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@babel/core": "^7.10.2",
    "@sentry/types": "^7.12.1",
    "@types/hast": "^2.3.4",
    "@types/node": "^13.7.6",
    "@types/nodemailer": "^6.4.4",
    "@types/react": "^17",
    "@types/react-dom": "^17",
    "@types/shelljs": "^0.8.8",
    "@types/unist": "^2.0.6",
    "babel-loader": "^8.1.0",
    "babel-plugin-import": "^1.13.3",
    "chalk": "^4.1.2",
    "esbuild-plugin-yaml": "^0.0.1",
    "eslint": "^7.32.0",
    "eslint-plugin-storybook": "^0.5.11",
    "graphql-voyager": "^1.0.0-rc.31",
    "mongodb-memory-server": "^7.3.6",
    "next-transpile-modules": "^9.0.0",
    "react-is": "^16.13.1",
    "source-map-support": "^0.5.19",
    "storybook-css-modules-preset": "^1.1.1",
    "supertest": "^6.1.6",
    "ts-loader": "^7.0.5",
    "tsup": "=6.0.1",
    "typescript": "=4.3.5",
    "webpack": "5",
    "yalc": "^1.0.0-pre.53"
  },
  "optionalDependencies": {
    "@cypress/code-coverage": "^3.8.1",
    "@cypress/webpack-preprocessor": "^5.4.1",
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@next/bundle-analyzer": "^12.3.1",
    "@storybook/addon-a11y": "^6.4.22",
    "@storybook/addon-actions": "^6.4.22",
    "@storybook/addon-backgrounds": "^6.4.22",
    "@storybook/addon-controls": "^6.4.22",
    "@storybook/addon-docs": "^6.4.22",
    "@storybook/addon-essentials": "^6.4.22",
    "@storybook/addon-links": "^6.4.22",
    "@storybook/addons": "^6.4.22",
    "@storybook/builder-webpack5": "^6.5.0-beta.1",
    "@storybook/manager-webpack5": "^6.5.0-beta.1",
    "@storybook/react": "^6.4.22",
    "@storybook/testing-react": "^1.2.4",
    "@testing-library/cypress": "^8.0.2",
    "@testing-library/jest-dom": "^5.9.0",
    "@testing-library/react": "^10.2.0",
    "@testing-library/react-hooks": "^3.3.0",
    "@types/jest": "^25.2.3",
    "auto-changelog": "^2.2.1",
    "chromatic": "^5.9.2",
    "cypress": "9.7.0",
    "dotenv-cli": "^4.0.0",
    "eslint-config-next": "^11.1.0",
    "eslint-plugin-cypress": "2.11.1",
    "husky": "^7.0.4",
    "jest": "^26.0.1",
    "jest-transformer-mdx": "^2.2.0",
    "nyc": "^15.1.0",
    "serve": "^11.3.2",
    "shelljs": "^0.8.4",
    "smtp-tester": "^1.2.0",
    "start-server-and-test": "^1.11.0",
    "storybook-addon-next-router": "^3.1.1"
  },
  "packageManager": "pnpm@7.3.0",
  "pnpm": {
    "overrides": {
      "@types/react@>17": "^17.0.1",
      "@types/react-dom@>17": "^17.0.1",
      "@apollo/client>ts-invariant": "0.10.3"
    }
  }
}
