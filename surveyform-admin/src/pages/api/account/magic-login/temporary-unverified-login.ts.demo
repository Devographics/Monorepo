/**
 * Allow to log in before the magic link email is verified
 *
 * @see https://github.com/StateOfJS/StateOfJS-next2/issues/3
 * This would allow a temporary access without clicking the magic link in some scnearios
 * However this is not secure (someone could use your email and get your data until you verify your account)
 */
import passport from "passport";
import nextConnect from "next-connect";
import { NextApiRequest, NextApiResponse } from "next";
import { apiWrapper } from "~/lib/server/sentry";

import { magicLinkStrategy } from "~/account/magicLogin/api/passport/magic-login-strategy";
import { setToken } from "../middlewares/setToken";

passport.use(magicLinkStrategy);

interface MagicLoginReqBody {
  token: string;
}
// NOTE: adding NextApiRequest, NextApiResponse is required to get the right typings in next-connect
// this is the normal behaviour
const login = nextConnect<NextApiRequest, NextApiResponse>()
  .use(passport.initialize())
  .post(
    (req, res, next) => {},
    async (req, res, next) => {
      const user = (req as unknown as any).user;
      if (!user) {
        return res
          .status(500)
          .send("Magic login succeeded but req.user not correctly set.");
      }
      return next();
    },
    setToken,
    (req, res) => {
      return res.status(200).send({ done: true });
    }
  );

export default apiWrapper(login);
