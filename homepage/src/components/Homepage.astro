---
import T from '@components/T'
import Newsletter from '@components/Newsletter'
import PastEditions from '@components/PastEditions.astro'
import EditionPlaceholder from '@components/EditionPlaceholder.astro'
import LastEdition from '@components/LastEdition.astro'
import { statuses } from '@helpers/constants'
import { getLocaleSubset } from '@helpers/translator'
const { survey, locale, surveys } = Astro.props
const { editions =[]} = surveys
const allEditions = (editions)
    .sort((e1, e2) => e2.year - e1.year)
    .filter(e => [statuses.open, statuses.closed, statuses.preview].includes(e.status))
const { id } = survey

const [lastEdition, ...pastEditions] = allEditions
// const openEdition = allEditions.find(e => e.status === statuses.open)
// const closedEditions = allEditions.filter(e => e.status === statuses.closed)
---

<div class="homepage">
    <h1>
        {survey.name}
    </h1>
    <p class="survey-description">
        <T locale={locale} k={`general.${id}.description`} />
    </p>

    {lastEdition ? <LastEdition edition={lastEdition}/> : <EditionPlaceholder survey={survey}/>}

    <div class="intro">
        <T locale={locale} k={`general.${id}.intro`} md={true} />
    </div>

    <Newsletter
        client:load
        locale={getLocaleSubset(locale, [
            'newsletter.stay_tuned',
            'newsletter.leave_your_email',
            'newsletter.email',
            'newsletter.submit'
        ])}
        listId={survey.emailOctopus.listId}
    />

    {
        pastEditions && pastEditions.length > 0 && (
            <PastEditions editions={editions} locale={locale} survey={survey}/>
        )
    }
</div>

<style lang="scss">
    @import '../stylesheets/_breakpoints.scss';

    h1 {
        font-size: var(--title-font);
        text-align: center;
        margin-bottom: var(--halfspacing);
        line-height: 1;

        @include small {
            font-size: var(--largest-font);
        }
    }

    .survey-description {
        font-size: var(--large-font);
        margin-bottom: var(--doublespacing);
        text-align: center;
        opacity: var(--secondary-opacity);
    }

    h2 {
        font-size: var(--larger-font);
        margin-bottom: var(--doublespacing);
        text-align: center;
    }

    .intro {
        font-size: var(--large-font);
        margin-bottom: var(--doublespacing);
        text-align: center;

        @include small {
            font-size: var(--medium-font);
        }
    }

    .last-edition,
    .past-editions {
        margin-bottom: var(--doublespacing);
    }

    .past-editions-items {
        display: grid;
        column-gap: var(--doublespacing);
        row-gap: var(--doublespacing);
        grid-template-columns: 1fr 1fr;

        @include small {
            grid-template-columns: 1fr;
        }
    }
</style>
