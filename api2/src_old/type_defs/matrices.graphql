
enum ToolMatrixExperienceID {
    would_use
    would_not_use
    interested
    not_interested
    never_heard
    """
    `would_use` + `would_not_use` VS total
    """
    usage
    """
    `would_use` + `interested` VS `would_use` + `would_not_use` + `interested` + `not_interested`
    """
    positive_sentiment
    """
    `would_not_use` + `not_interested` VS `would_use` + `would_not_use` + `interested` + `not_interested`
    """
    negative_sentiment
    """
    `would_use` VS `would_not_use`
    """
    satisfaction
    """
    `interested` VS `not_interested`
    """
    interest
    """
    `never_heard` VS total (inverted)
    """
    awareness
}

enum MatrixDimensionID {
    company_size
    source
    yearly_salary
    years_of_experience
}

type MatrixBucket {
    """
    Id of the bucket dimension range, e.g. `range_50_100`
    for `company_size`.
    """
    id: String
    """
    Number of responses for a given tool/feature in a specific range.
    e.g. users who picked `range_50_100` for `company_size` and also
    picked `would_use` for experience with `tailwind_css`.
    """
    count: Int
    """
    Ratio from all respondents who picked a specific experience
    for the current tool and also answered to the question related
    to the dimension, e.g. `yearly_salary`.
    `count` VS `total`.
    """
    percentage: Float
    """
    Total number of respondents for this specific range,
    e.g. number of users who selected `range_50_100`
    for the `company_size` question and also answered
    the experience question.
    """
    range_total: Int
    """
    Ratio of experience in this specific range,
    `count` VS `range_total`.
    """
    range_percentage: Float
    """
    Delta between the overall percentage of responses
    for the selected experience filter compared
    to the percentage in this range.
    `range_percentage` VS overall percentage.
    """
    range_percentage_delta: Float
}

type ToolMatrix {
    id: ToolID
    entity: Entity
    count: Int
    total: Int
    percentage: Float
    buckets: [MatrixBucket]
}

type ToolsExperienceDimensionMatrix {
    dimension: MatrixDimensionID
    tools: [ToolMatrix]
}

type ToolsExperienceMatrices {
    experience: ToolMatrixExperienceID
    dimensions: [ToolsExperienceDimensionMatrix]
}

type Matrices {
    tools(
        year: Int!,
        ids: [ToolID]!,
        experiences: [ToolMatrixExperienceID]!,
        dimensions: [MatrixDimensionID]!
    ): [ToolsExperienceMatrices]
}
