import { TemplateFunction, QuestionTemplateOutput } from '@devographics/types'
import { getPaths } from '../helpers'

const nationalities = [
    'Afghan',
    'Albanian',
    'Algerian',
    'American',
    'American Samoan',
    'Andorran',
    'Angolan',
    'Anguillian',
    'Antiguan, Barbudan',
    'Argentinean',
    'Armenian',
    'Aruban',
    'Australian',
    'Austrian',
    'Azerbaijani',
    'Bahamian',
    'Bahraini',
    'Bangladeshi',
    'Barbadian',
    'Belarusian',
    'Belgian',
    'Belizean',
    'Beninese',
    'Bermudian',
    'Bhutanese',
    'Bolivian',
    'Bosnian, Herzegovinian',
    'Brazilian',
    'British',
    'Bruneian',
    'Bulgarian',
    'Burkinabe',
    'Burundian',
    'Cambodian',
    'Cameroonian',
    'Canadian',
    'Cape Verdian',
    'Caymanian',
    'Central African',
    'Chadian',
    'Channel Islander',
    'Chilean',
    'Chinese',
    'Christmas Island',
    'Cocos Islander',
    'Colombian',
    'Comoran',
    'Congolese',
    'Cook Islander',
    'Costa Rican',
    'Croatian',
    'Cuban',
    'Cypriot',
    'Czech',
    'Danish',
    'Djibouti',
    'Dominican',
    'Dutch',
    'East Timorese',
    'Ecuadorean',
    'Egyptian',
    'Emirian',
    'Equatorial Guinean',
    'Eritrean',
    'Estonian',
    'Ethiopian',
    'Falkland Islander',
    'Faroese',
    'Fijian',
    'Filipino',
    'Finnish',
    'French',
    'French Guianan',
    'French Polynesian',
    'Gabonese',
    'Gambian',
    'Georgian',
    'German',
    'Ghanaian',
    'Gibraltar',
    'Greek',
    'Greenlandic',
    'Grenadian',
    'Guadeloupian',
    'Guamanian',
    'Guatemalan',
    'Guinea-Bissauan',
    'Guinean',
    'Guyanese',
    'Haitian',
    'Heard and McDonald Islander',
    'Honduran',
    'Hong Kongese',
    'Hungarian',
    'I-Kiribati',
    'Icelander',
    'Indian',
    'Indonesian',
    'Iranian',
    'Iraqi',
    'Irish',
    'Israeli',
    'Italian',
    'Ivorian',
    'Jamaican',
    'Japanese',
    'Jordanian',
    'Kazakhstani',
    'Kenyan',
    'Kirghiz',
    'Kittian and Nevisian',
    'Kuwaiti',
    'Laotian',
    'Latvian',
    'Lebanese',
    'Liberian',
    'Libyan',
    'Liechtensteiner',
    'Lithuanian',
    'Luxembourger',
    'Macedonian',
    'Malagasy',
    'Malawian',
    'Malaysian',
    'Maldivan',
    'Malian',
    'Maltese',
    'Manx',
    'Marshallese',
    'Mauritanian',
    'Mauritian',
    'Mexican',
    'Micronesian',
    'Moldovan',
    'Monegasque',
    'Mongolian',
    'Montenegrin',
    'Montserratian',
    'Moroccan',
    'Mosotho',
    'Motswana',
    'Mozambican',
    'Myanmarian',
    'Namibian',
    'Nauruan',
    'Nepalese',
    'New Caledonian',
    'New Zealander',
    'Ni-Vanuatu',
    'Nicaraguan',
    'Nigerian',
    'Niuean',
    'Norfolk Islander',
    'North Korean',
    'Norwegian',
    'Omani',
    'Pakistani',
    'Palauan',
    'Palestinian',
    'Panamanian',
    'Papua New Guinean',
    'Paraguayan',
    'Peruvian',
    'Pitcairn Islander',
    'Polish',
    'Portuguese',
    'Puerto Rican',
    'Qatari',
    'Romanian',
    'Russian',
    'Rwandan',
    'Sahrawi',
    'Saint BarthÃ©lemy Islander',
    'Saint Helenian',
    'Saint Lucian',
    'Saint Martin Islander',
    'Saint Vincentian',
    'Salvadoran',
    'Sammarinese',
    'Samoan',
    'Sao Tomean',
    'Saudi Arabian',
    'Senegalese',
    'Serbian',
    'Seychellois',
    'Sierra Leonean',
    'Singaporean',
    'Slovak',
    'Slovene',
    'Solomon Islander',
    'Somali',
    'South African',
    'South Georgia and the South Sandwich Islander',
    'South Korean',
    'South Sudanese',
    'Spanish',
    'Sri Lankan',
    'Sudanese',
    'Surinamer',
    'Swazi',
    'Swedish',
    'Swiss',
    'Syrian',
    'Tadzhik',
    'Taiwanese',
    'Tanzanian',
    'Thai',
    'Togolese',
    'Tokelauan',
    'Tongan',
    'Trinidadian',
    'Tunisian',
    'Turkish',
    'Turkmen',
    'Turks and Caicos Islander',
    'Tuvaluan',
    'Ugandan',
    'Ukrainian',
    'Uruguayan',
    'Uzbekistani',
    'Venezuelan',
    'Vietnamese',
    'Virgin Islander',
    'Wallis and Futuna Islander',
    'Yemeni',
    'Zambian',
    'Zimbabwean'
]

function formatAsGraphQLEnumValue(str: string) {
    // Replace any non-alphanumeric characters with underscores
    const formattedStr = str.replace(/[^0-9a-zA-Z]/g, '_')

    // If the string starts with a number, add an underscore at the beginning
    if (/^[0-9]/.test(formattedStr)) {
        return '_' + formattedStr
    }

    return formattedStr
}

export const tokyodev_nationality: TemplateFunction = options => {
    const { question } = options
    const output: QuestionTemplateOutput = {
        id: 'nationality',
        options: nationalities.map(nationality => ({
            id: formatAsGraphQLEnumValue(nationality),
            label: nationality
        })),
        ...getPaths(options),
        ...question
    }
    return output
}
