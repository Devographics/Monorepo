---
import { mq, fontSize, fontWeight, spacing, color } from "@/lib/theme";
// import ButtonGroup from './ButtonGroup'
// TODO: import this class from button group when we recreate them
const ButtonGroup = ".ButtonGroup";
const { size = "medium", variant = "default", class: className } = Astro.props;

const computeStyle = () => {
  if (variant === "link") {
    return `
                color: ${color("link")} !important;
                padding: 0 !important;
                display: inline-block !important;
                font-weight: ${fontWeight("bold")} !important;
                border: none !important;
                background: none !important;
                cursor: pointer !important;
            `;
  } else {
    // default
    return `
                background: none;
                cursor: pointer;
                display: flex;
                justify-content: center;
                gap: 5px;
                align-items: center;
                text-align: center;
                font-weight: ${fontWeight("bold")};
                border: 1px dashed;
                box-shadow: 0 0 0 rgba(0, 0, 0, 0);
                transition: all 300ms ease-out;

                /* text-transform: uppercase; */
                /* letter-spacing: 1.5px; */

                &,
                &:link,
                &:visited {
                    text-decoration: none;
                    border-color: ${color("text")};
                    color: ${color("text")};
                }

                &:hover,
                &:focus {
                    border-style: solid;
                    border-color: ${color("link")};
                    color: ${color("link")};
                    svg {
                        color: ${color("link")} !important;
                    }
                }
                // sizing
                ${(() => {
                  if (size === "small") {
                    return `
                            font-size: ${fontSize("small")};
                            padding: ${spacing(0.2)} ${spacing(0.5)};
                        `;
                  }

                  if (size === "large") {
                    return `
                            @media ${mq.small} {
                                font-size: ${fontSize("large")};
                                padding: ${spacing(0.75)};
                            }

                            @media ${mq.mediumLarge} {
                                font-size: ${fontSize("larger")};
                                padding: ${spacing(1)};
                            }
                        `;
                  }

                  return `
                        padding: ${spacing(0.5)} ${spacing(1)};

                        @media ${mq.small} {
                            font-size: ${fontSize("small")};
                        }

                        @media ${mq.mediumLarge} {
                            font-size: ${fontSize("medium")};
                        }
                    `;
                })()}

                &:hover, &:focus {
                    text-decoration: none;
                    box-shadow: 0 3px 0 rgba(0, 0, 0, 0.3);
                    background: ${color("backgroundAlt")};
                }

                &.Button--selected {
                    background: ${color("backgroundAlt")};
                    cursor: default;
                    pointer-events: none;
                    border-style: solid;
                    .secondary-bg & {
                        background: ${color("backgroundAlt3")};
                    }
                }
            `;
  }
};
---

<style
  set:text={`
    button {
        ${computeStyle()}
    }
    ${ButtonGroup} & {
        /* white-space: nowrap; */
        &--active {
            cursor: default;
            pointer-events: none;
        }
        @media ${mq.small} {
            width: 100%;
            flex-basis: 100%;
            /* font-size: ${fontSize("small")}; */
            &:first-child {
                border-top-width: 1px;
            }

            &:hover,
            &:focus {
                border-top-color: ${color("border")};
                border-bottom-color: ${color("border")};

                &:first-child {
                    border-top-color: ${color("hover")};
                }
                &:last-child {
                    border-bottom-color: ${color("hover")};
                }
            }
        }

        @media ${mq.mediumLarge} {
            border-left-width: 0;
            &:first-child {
                border-left-width: 1px;
            }

            &:hover,
            &:focus {
                border-left-color: ${color("border")};
                border-right-color: ${color("border")};

                &:first-child {
                    border-left-color: ${color("hover")};
                }
                &:last-child {
                    border-right-color: ${color("hover")};
                }
            }
        }
    }
    `}
></style>
<button class=`Button${className ? ` {className}} : ''} {variant}}
  ><slot /></button
>
