enum ToolID {
    # JS flavors
    typescript
    reason
    elm
    clojurescript
    purescript
    # JS front end frameworks
    react
    vuejs
    angular
    preact
    ember
    svelte
    alpinejs
    litelement
    stimulus
    solid # 2021
    qwik # 2022
    stencil # 2022
    # JS data layer
    redux
    apollo
    graphql
    mobx
    relay
    xstate
    vuex
    # JS back end frameworks/rendering frameworks
    express
    nextjs
    koa
    meteor
    sails
    feathers
    nuxt
    gatsby
    nest
    strapi
    fastify
    hapi
    redwood # 2021
    astro # 2021
    eleventy # 2021
    blitz # 2021
    remix # 2021
    sveltekit # 2021
    docusaurus # 2022
    # JS testing
    jest
    mocha
    storybook
    cypress
    enzyme
    ava
    jasmine
    puppeteer
    testing_library
    playwright
    webdriverio
    vitest # 2021
    selenium # 2022
    testcafe # 2022
    # JS build tools
    webpack
    parcel
    gulp
    rollup
    browserify
    tsc
    rome
    snowpack
    swc
    esbuild
    vite # 2021
    wmr # 2021
    turbopack # 2022
    # JS mobile desktop
    electron
    reactnative
    nativeapps
    cordova
    ionic
    nwjs
    expo
    capacitor
    quasar
    tauri # 2021
    nativescript # 2022
    # JS Monorepo tools
    rush # 2021
    turborepo # 2021
    yarn_workspaces # 2021
    yalc # 2021
    lerna # 2021
    npm_workspaces # 2021
    pnpm # 2021
    nx # 2021
    # CSS Pre-/Post-processors
    sass
    less
    post_css
    stylus
    assembler_css
    # CSS frameworks
    bootstrap
    materialize_css
    ant_design
    semantic_ui
    bulma
    foundation
    ui_kit
    tachyons
    primer
    tailwind_css
    pure_css
    skeleton
    spectre_css
    halfmoon
    # CSS methodologies
    bem
    atomic_css
    oocss
    smacss
    it_css
    cube_css
    # CSS in JS
    styled_components
    jss
    styled_jsx
    radium
    emotion
    css_modules
    styled_system
    stitches
    styletron
    fela
    linaria
    astroturf
    twin
    theme_ui
    vanilla_extract
    windi_css

    # GraphQL
    apollo_server
    yoga
    graphql_js
    helix
    express_graphql
    mercurius
    dgs
    graphql_dotnet
    absinthe
    graphql_go
    apollo_client
    urql
    react_query
    # relay already defined
    apollo_ios
    swift_graphql
    apollo_kotlin
    graphql_hooks
    graphql_request
    no_client
    postgraphile
    hasura
    graphcms
    datocms
    sanity
    wpgraphql
    wundergraph
    fauna
    dgraph
    graphql_editor
    # strapi already defined
    appsync
    contentful
    graphene
    graphql_mesh
    nexus
    typegraphql
    pothos
    strawberry
    sangria
    graphql_java
    gqlgen
    graphql_zeus
    genql
    graphql_code_generator
}

"""
An aggregation bucket for tool experience containing both an absolute count
for the parent year, and the percentage it corresponds to regarding
the total number of respondents who have answered the question
in this particular year.
"""
type ToolExperienceBucket {
    id: ToolExperienceID
    count: Int
    countDelta: Int
    percentage_question: Float
    percentage_survey: Float
    percentage_facet: Float
    percentageDelta: Float
}

"""
Tool data for a specific facet
"""
type ToolExperienceFacet {
    type: Facet
    id: String
    buckets: [ToolExperienceBucket]
    completion: FacetCompletion
}

"""
Experience ranking for a tool in a specific year, even if the data
is computed at the same point in time, we estimate that there is a logical
progression in this:

awareness > usage > interest > satisfaction
"""
type ToolAwarenessUsageInterestSatisfaction {
    """
    Awareness is the total number of participants who answered to
    the experience question VS those who never heard of a tool.

    This value is expressed as a percentage.
    """
    awareness: Float
    """
    Usage is the total number of participants who used the tool,
    include both users willing to use it again and those who wouldn't.

    This value is expressed as a percentage.
    """
    usage: Float
    """
    Interest is the ratio of participants who heard of tool and
    are interested/not interested VS those who are only interested in it.

    This value is expressed as a percentage.
    """
    interest: Float
    """
    Satisfaction is the ratio of participants who used of tool and
    are satisfied/not satisfied VS those who are willing to use it again.

    This value is expressed as a percentage.
    """
    satisfaction: Float
}

type ToolYearExperience {
    year: Int
    completion: YearCompletion
    facets: [ToolExperienceFacet]
    # awarenessUsageInterestSatisfaction: ToolAwarenessUsageInterestSatisfaction
}

type ToolExperience {
    all_years: [ToolYearExperience]
    year(year: Int!): ToolYearExperience
    keys: [ToolExperienceID]
}

type ToolExperienceGraphNode {
    id: String
    year: Int
    experience: ToolExperienceID
}

"""
Aggregate the experience of multiple tools
"""
type ToolExperienceAggregatedBucket {
    ids: [ToolExperienceID]
    count: Int
    countDelta: Int
    percentage_question: Float
    percentage_survey: Float
    percentage_facet: Float
    percentageDelta: Float
}
type ToolExperienceAggregatedFacet {
    type: Facet
    id: String
    buckets: [ToolExperienceAggregatedBucket]
    # completion: FacetCompletion
}
type ToolYearExperienceAggregated {
    year: Int
    # completion: YearCompletion
    facets: [ToolExperienceAggregatedFacet]
}
type ToolExperienceAggregated {
    all_years: [ToolYearExperienceAggregated]
    year(year: Int!): ToolYearExperienceAggregated
    keys: [ToolExperienceID]
}

"""
Track number of connections between 2 nodes,
for example number of user who were interested in React in 206
and are willing to use it in 2017, connections are only established
for consecutive years.
"""
type ToolExperienceGraphLink {
    source: String
    target: String
    count: Int
}

"""
A graph of users' experience over years, compared to just computing
the overall choice count for each year, this keeps continuity for each user.
"""
type ToolExperienceGraph {
    nodes: [ToolExperienceGraphNode]
    links: [ToolExperienceGraphLink]
}

type ToolExperienceRankingYearMetric {
    year: Int
    rank: Int
    percentage_question: Float
    percentage_survey: Float
    percentage_facet: Float
}

"""
Used to represent the ranking of a tool compared to others
for awareness/interest and stisfaction.
"""
type ToolExperienceRanking {
    id: ToolID
    entity: Entity
    awareness: [ToolExperienceRankingYearMetric]
    usage: [ToolExperienceRankingYearMetric]
    interest: [ToolExperienceRankingYearMetric]
    satisfaction: [ToolExperienceRankingYearMetric]
}

"""
Contains various rankings for a set of tools.
"""
type ToolsRankings {
    ids: [ToolID]!
    years: [Int]
    experience(filters: Filters): [ToolExperienceRanking]
}

type ToolExperienceTransitionsNode {
    id: String
    year: Int
    choice: ToolExperienceID
    count: Int
}

type ToolExperienceTransitionsTransition {
    from: String
    to: String
    count: Int
    percentage: Int
}

type ToolExperienceTransitions {
    tool: ToolID
    keys: [ToolExperienceID]
    nodes: [ToolExperienceTransitionsNode]
    transitions: [ToolExperienceTransitionsTransition]
}

type Tool {
    id: ToolID!
    experience(filters: Filters, options: Options, facet: Facet): ToolExperience
    experienceAggregated(filters: Filters, options: Options, facet: Facet): ToolExperienceAggregated
    experienceGraph(filters: Filters): ToolExperienceGraph
    experienceTransitions(year: Int!): ToolExperienceTransitions
    comments: ToolComments
    entity: Entity
}